{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/home/khalil/next.js/culturedechaleur/pages/index.js\";\nimport React from \"react\";\nimport Layout from '../components/MyLayout.js';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\nimport RandomQuoteMachine from \"../components/quote\";\n\nvar Index = function Index(props) {\n  return React.createElement(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    style: {\n      fontSize: '100%',\n      border: '1px solid black',\n      width: '100%',\n      overflow: 'hidden',\n      whiteSpace: 'noWrap'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"THE HARDEST WORKING, BEST CONDITIONED, MOST PROFESSIONAL, UNSELFISH, TOUGHEST, MEANEST, NASTIEST TEAM IN THE NBA.\"), React.createElement(\"div\", {\n    class: \"container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"Methodology: Start with Defensive Rating. subtract the percentage over the ideal weight for player's height, or add percentage under target weight. add blocks. multiply opponent second chance points and subtract from score. add rebounds. multiply charges drawn by two and add. Current Rankings:\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }), \"Last Updated:\", React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, props.shows.map(function (show) {\n    return React.createElement(\"li\", {\n      key: show.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(Link, {\n      as: \"/p/\".concat(show.id),\n      href: \"/post?id=\".concat(show.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, show.PLAYER_NAME)));\n  }))), \"HEAT WISDOM CORNER\", React.createElement(RandomQuoteMachine, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }));\n};\n\nIndex.getInitialProps =\n/*#__PURE__*/\n_asyncToGenerator(\n/*#__PURE__*/\n_regeneratorRuntime.mark(function _callee() {\n  var res, data;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return fetch('http://localhost:8000/heatculture/ranking?format=json');\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return res.json();\n\n        case 5:\n          data = _context.sent;\n          console.log(\"Show data fetched. Count: \".concat(data.length));\n          return _context.abrupt(\"return\", {\n            shows: data.HustleStats.map(function (entry) {\n              return entry;\n            })\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default Index;","map":{"version":3,"sources":["/home/khalil/next.js/culturedechaleur/pages/index.js"],"names":["Layout","Link","fetch","RandomQuoteMachine","Index","props","fontSize","border","width","overflow","whiteSpace","shows","map","show","id","PLAYER_NAME","getInitialProps","res","json","data","console","log","length","HustleStats","entry"],"mappings":";;;;AAAA,OAAOA,MAAP,MAAmB,2BAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,kBAAP,MAA+B,qBAA/B;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD;AAAA,SACZ,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE;AAAI,IAAA,KAAK,EAAE;AAAGC,MAAAA,QAAQ,EAAE,MAAb;AAAoBC,MAAAA,MAAM,EAAC,iBAA3B;AAA6CC,MAAAA,KAAK,EAAC,MAAnD;AAA0DC,MAAAA,QAAQ,EAAC,QAAnE;AAA4EC,MAAAA,UAAU,EAAC;AAAvF,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yHAFF,EAGE;AAAK,IAAA,KAAK,EAAC,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+SAGmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHnB,mBAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,KAAK,CAACM,KAAN,CAAYC,GAAZ,CAAgB,UAAAC,IAAI;AAAA,WACnB;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,EAAE,eAAQD,IAAI,CAACC,EAAb,CAAR;AAA2B,MAAA,IAAI,qBAAcD,IAAI,CAACC,EAAnB,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAID,IAAI,CAACE,WAAT,CADF,CADF,CADmB;AAAA,GAApB,CADH,CAPA,CAHF,wBAqBE,oBAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArBF,EAsBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAtBF,CADY;AAAA,CAAd;;AA2BAX,KAAK,CAACY,eAAN;AAAA;AAAA;AAAA;AAAA,yBAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACJd,KAAK,CAAC,uDAAD,CADD;;AAAA;AAChBe,UAAAA,GADgB;AAAA;AAAA,iBAEHA,GAAG,CAACC,IAAJ,EAFG;;AAAA;AAEhBC,UAAAA,IAFgB;AAItBC,UAAAA,OAAO,CAACC,GAAR,qCAAyCF,IAAI,CAACG,MAA9C;AAJsB,2CAMf;AACLX,YAAAA,KAAK,EAAEQ,IAAI,CAACI,WAAL,CAAiBX,GAAjB,CAAqB,UAAAY,KAAK;AAAA,qBAAIA,KAAJ;AAAA,aAA1B;AADF,WANe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;AAWA,eAAepB,KAAf","sourcesContent":["import Layout from '../components/MyLayout.js'\nimport Link from 'next/link'\nimport fetch from 'isomorphic-unfetch'\nimport RandomQuoteMachine from \"../components/quote\"\n\nconst Index = (props) => (\n  <Layout>\n  \n    <h1 style={{  fontSize: '100%',border:'1px solid black',width:'100%',overflow:'hidden',whiteSpace:'noWrap'}}>THE HARDEST WORKING, BEST CONDITIONED, MOST PROFESSIONAL, UNSELFISH, TOUGHEST, MEANEST, NASTIEST TEAM IN THE NBA.</h1>\n    <div class=\"container\">\n      Methodology: Start with Defensive Rating. subtract the percentage over the ideal weight for player's height, or add percentage under target weight. add blocks. multiply opponent second chance points and subtract from score. add rebounds. multiply charges drawn by two and add. \n\n      Current Rankings:<br/>\n      Last Updated:\n     \n \n    <ul>\n      {props.shows.map(show => (\n        <li key={show.id}>\n          <Link as={`/p/${show.id}`} href={`/post?id=${show.id}`}>\n            <a>{show.PLAYER_NAME}</a>\n          </Link>\n        </li>\n      ))}\n    </ul>\n    </div>\n    HEAT WISDOM CORNER\n    <RandomQuoteMachine></RandomQuoteMachine>\n    <br/>\n  </Layout>\n)\n\nIndex.getInitialProps = async function() {\n  const res = await fetch('http://localhost:8000/heatculture/ranking?format=json')\n  const data = await res.json()\n\n  console.log(`Show data fetched. Count: ${data.length}`)\n\n  return {\n    shows: data.HustleStats.map(entry => entry)\n  }\n}\n\nexport default Index"]},"metadata":{},"sourceType":"module"}