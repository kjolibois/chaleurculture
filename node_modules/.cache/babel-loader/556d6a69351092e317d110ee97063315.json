{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/khalil/next.js/culturedechaleur/components/UpdatePanel.js\";\nimport React, { Component } from 'react';\n\nvar UpdatePanel =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UpdatePanel, _Component);\n\n  function UpdatePanel(_props) {\n    var _this2;\n\n    _classCallCheck(this, UpdatePanel);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(UpdatePanel).call(this, _props)); //console.log(props)\n    // Don't call this.setState() here!\n\n    _defineProperty(_assertThisInitialized(_this2), \"getRandomQuote\", function (props) {\n      _this2.setState({\n        status: {\n          props: props\n        },\n        stuff: \"banna\"\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this2), \"customHandleClick\",\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(props) {\n        var res, data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch('http://localhost:8000/heatculture/update');\n\n              case 2:\n                res = _context.sent;\n                _context.next = 5;\n                return res.json();\n\n              case 5:\n                data = _context.sent;\n                this.setState({\n                  stuff: data.length\n                });\n                console.log(\"Show data fetcheddd. Count: \".concat(data.length));\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    _this2.state = {\n      header: _props.author,\n      content: \"Content from state...\",\n      status: \"\",\n      advancedstatsupdate: \"\",\n      stuff: \"banna\"\n    };\n    return _this2;\n  }\n\n  _createClass(UpdatePanel, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount(props) {\n      var _this = this;\n\n      console.log(_this.props);\n      this.getRandomQuote(_this.props);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var state = this.state;\n      return React.createElement(\"div\", {\n        id: \"quote-box\",\n        style: {\n          'border': '3px solid black;',\n          'backgroundColor': 'black'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: function onClick() {\n          _this3.customHandleClick();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Tribber Update\"), state.stuff, state.header, state.status.advancedstatsupdate, state.status.lastupdate, state.status.rosterstatsupdate, state.status.defensestatsupdate, state.status.hustlestatsupdate);\n    }\n  }]);\n\n  return UpdatePanel;\n}(Component);\n\nexport default UpdatePanel;","map":{"version":3,"sources":["/home/khalil/next.js/culturedechaleur/components/UpdatePanel.js"],"names":["React","Component","UpdatePanel","props","setState","status","stuff","fetch","res","json","data","length","console","log","state","header","author","content","advancedstatsupdate","_this","getRandomQuote","customHandleClick","lastupdate","rosterstatsupdate","defensestatsupdate","hustlestatsupdate"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEMC,W;;;;;AACF,uBAAYC,MAAZ,EAAmB;AAAA;;AAAA;;AACf,sFAAMA,MAAN,GADe,CAEf;AACA;;AAHe,sEAcF,UAACA,KAAD,EAAW;AAE1B,aAAKC,QAAL,CAAc;AAEZC,QAAAA,MAAM,EAAE;AAACF,UAAAA,KAAK,EAALA;AAAD,SAFI;AAGdG,QAAAA,KAAK,EAAC;AAHQ,OAAd;AAMD,KAtBkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAuBC,iBAAeH,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACEI,KAAK,CAAC,0CAAD,CADP;;AAAA;AACVC,gBAAAA,GADU;AAAA;AAAA,uBAEGA,GAAG,CAACC,IAAJ,EAFH;;AAAA;AAEVC,gBAAAA,IAFU;AAGhB,qBAAKN,QAAL,CAAc;AACVE,kBAAAA,KAAK,EAACI,IAAI,CAACC;AADD,iBAAd;AAGAC,gBAAAA,OAAO,CAACC,GAAR,uCAA2CH,IAAI,CAACC,MAAhD;;AANgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAvBD;;AAAA;AAAA;AAAA;AAAA;;AAIf,WAAKG,KAAL,GAAc;AACVC,MAAAA,MAAM,EAAEZ,MAAK,CAACa,MADJ;AAEVC,MAAAA,OAAO,EAAE,uBAFC;AAGVZ,MAAAA,MAAM,EAAC,EAHG;AAIVa,MAAAA,mBAAmB,EAAC,EAJV;AAKVZ,MAAAA,KAAK,EAAC;AALI,KAAd;AAJe;AAWhB;;;;sCAqBeH,K,EAAO;AACrB,UAAMgB,KAAK,GAAG,IAAd;;AAEAP,MAAAA,OAAO,CAACC,GAAR,CAAYM,KAAK,CAAChB,KAAlB;AACF,WAAKiB,cAAL,CAAoBD,KAAK,CAAChB,KAA1B;AACD;;;6BAEQ;AAAA;;AACR,UAAMW,KAAK,GAAE,KAAKA,KAAlB;AACC,aAGE;AAAK,QAAA,EAAE,EAAC,WAAR;AAAoB,QAAA,KAAK,EAAE;AAAC,oBAAS,kBAAV;AAA6B,6BAAkB;AAA/C,SAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,OAAO,EAAE,mBAAM;AAAE,UAAA,MAAI,CAACO,iBAAL;AAA0B,SAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,EAEKP,KAAK,CAACR,KAFX,EAGGQ,KAAK,CAACC,MAHT,EAIGD,KAAK,CAACT,MAAN,CAAaa,mBAJhB,EAKGJ,KAAK,CAACT,MAAN,CAAaiB,UALhB,EAMGR,KAAK,CAACT,MAAN,CAAakB,iBANhB,EAOGT,KAAK,CAACT,MAAN,CAAamB,kBAPhB,EAQGV,KAAK,CAACT,MAAN,CAAaoB,iBARhB,CAHF;AAcD;;;;EAxDqBxB,S;;AAgExB,eAAeC,WAAf","sourcesContent":["import React, { Component } from 'react';\n\nclass UpdatePanel extends Component {\n    constructor(props) {\n        super(props);\n        //console.log(props)\n        // Don't call this.setState() here!\n        this.state =  {\n            header: props.author,\n            content: \"Content from state...\",\n            status:\"\",\n            advancedstatsupdate:\"\",\n            stuff:\"banna\"\n         };\n      }\n \n  \n    getRandomQuote = (props) => {\n      \n      this.setState({\n          \n        status: {props},\n      stuff:\"banna\"\n      });\n      \n    }\n     customHandleClick= async function(props) {  \n        const res = await fetch('http://localhost:8000/heatculture/update')\n        const data = await res.json()\n        this.setState({\n            stuff:data.length\n        });\n        console.log(`Show data fetcheddd. Count: ${data.length}`); \n        }\n  \n    componentDidMount(props) {\n        const _this = this;\n\n        console.log(_this.props)\n      this.getRandomQuote(_this.props);\n    }\n  \n    render() {\n     const state= this.state\n      return (\n        \n\n        <div id=\"quote-box\" style={{'border':'3px solid black;','backgroundColor':'black'}}>\n            <button onClick={() => { this.customHandleClick() }} >Tribber Update</button>\n            {state.stuff}\n          {state.header}\n          {state.status.advancedstatsupdate}\n          {state.status.lastupdate}\n          {state.status.rosterstatsupdate}\n          {state.status.defensestatsupdate}\n          {state.status.hustlestatsupdate}\n        </div>\n      );\n    }\n  }\n  \n\n\n\n  \n  \n  export default UpdatePanel;"]},"metadata":{},"sourceType":"module"}