{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/home/khalil/next.js/culturedechaleur/components/UpdatePanel.js\";\nimport React, { Component } from 'react';\n\nvar UpdatePanel =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UpdatePanel, _Component);\n\n  function UpdatePanel(_props) {\n    var _this2;\n\n    _classCallCheck(this, UpdatePanel);\n\n    _this2 = _possibleConstructorReturn(this, _getPrototypeOf(UpdatePanel).call(this, _props)); //console.log(props)\n    // Don't call this.setState() here!\n\n    _defineProperty(_assertThisInitialized(_this2), \"getRandomQuote\", function (props) {\n      console.log(props);\n\n      _this2.setState({\n        status: props.data,\n        stuff: \"banna\"\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this2), \"customHandleClick\",\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(props) {\n        var res, data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch('http://localhost:8000/heatculture/update');\n\n              case 2:\n                res = _context.sent;\n                _context.next = 5;\n                return res.json();\n\n              case 5:\n                data = _context.sent;\n                this.setState({\n                  stuff: data.length\n                });\n                console.log(\"Show data fetcheddd. Count: \".concat(data.length));\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    _defineProperty(_assertThisInitialized(_this2), \"triggerUpdate\",\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(props) {\n        var res, data;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return fetch('http://localhost:8000/heatculture/update', {\n                  method: 'post',\n                  headers: {\n                    'Content-Type': 'application/json'\n                  },\n                  body: {\n                    \"first_name\": this.state.firstName\n                  }\n                });\n\n              case 2:\n                res = _context2.sent;\n                _context2.next = 5;\n                return res.json();\n\n              case 5:\n                data = _context2.sent;\n                this.setState({\n                  stuff: data.length\n                });\n                console.log(data);\n\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      return function (_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }());\n\n    _this2.state = {\n      header: _props.author,\n      content: \"Content from state...\",\n      status: \"\",\n      advancedstatsupdate: \"\",\n      stuff: \"banna\"\n    };\n    return _this2;\n  }\n\n  _createClass(UpdatePanel, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount(props) {\n      var _this = this;\n\n      console.log(_this.props);\n      this.getRandomQuote(_this.props);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var state = this.state;\n      return React.createElement(\"div\", {\n        id: \"quote-box\",\n        style: {\n          'border': '3px solid black;',\n          'backgroundColor': 'black'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: function onClick() {\n          _this3.triggerUpdate();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Tribber Update\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), \"Last Update:\", state.status.insertionDate, React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), \"Advanced:   \", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, state.status.AdvancedStatsStatus), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), \"Hustle Stats:\", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, state.status.HustleStatsStatus), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), \"Defense Stats:\", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, state.status.DefenseStatsStatus, \" \"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), \"Roster Stats:\", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, state.status.RosterStatsStatus, \" \"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }), \"Regular Stats:\", React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, state.status.RegStatsStatus, \" \"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return UpdatePanel;\n}(Component);\n\nexport default UpdatePanel;","map":{"version":3,"sources":["/home/khalil/next.js/culturedechaleur/components/UpdatePanel.js"],"names":["React","Component","UpdatePanel","props","console","log","setState","status","data","stuff","fetch","res","json","length","method","headers","body","state","firstName","header","author","content","advancedstatsupdate","_this","getRandomQuote","triggerUpdate","insertionDate","AdvancedStatsStatus","HustleStatsStatus","DefenseStatsStatus","RosterStatsStatus","RegStatsStatus"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nclass UpdatePanel extends Component {\n    constructor(props) {\n        super(props);\n        //console.log(props)\n        // Don't call this.setState() here!\n        this.state =  {\n            header: props.author,\n            content: \"Content from state...\",\n            status:\"\",\n            advancedstatsupdate:\"\",\n            stuff:\"banna\"\n         };\n      }\n \n  \n    getRandomQuote = (props) => {\n      console.log(props)\n      this.setState({\n          \n        status: props.data,\n      stuff:\"banna\"\n      });\n      \n    }\n     customHandleClick= async function(props) {  \n        const res = await fetch('http://localhost:8000/heatculture/update')\n    \n        const data = await res.json()\n        this.setState({\n            stuff:data.length\n        });\n        console.log(`Show data fetcheddd. Count: ${data.length}`); \n        }\n        triggerUpdate= async function(props) {  \n          const res = await fetch('http://localhost:8000/heatculture/update', {\n            method: 'post',\n            headers: {'Content-Type':'application/json',\n           },\n            body: {\n             \"first_name\": this.state.firstName\n            }\n           });\n  \n          const data = await res.json()\n          this.setState({\n              stuff:data.length\n          });\n          console.log(data); \n          }\n    componentDidMount(props) {\n        const _this = this;\n\n        console.log(_this.props)\n      this.getRandomQuote(_this.props);\n    }\n  \n    render() {\n     const state= this.state\n      return (\n        \n\n        <div id=\"quote-box\" style={{'border':'3px solid black;','backgroundColor':'black'}}>\n            <button onClick={() => { this.triggerUpdate() }} >Tribber Update</button>\n            <br/>\n            Last Update:{state.status.insertionDate}<br/>\n\n       Advanced:   <span>{state.status.AdvancedStatsStatus}</span> <br/>\n          Hustle Stats:<span>{state.status.HustleStatsStatus}</span> <br/>\n          Defense Stats:<span>{state.status.DefenseStatsStatus} </span><br/>\n          Roster Stats:<span>{state.status.RosterStatsStatus} </span><br/>\n          Regular Stats:<span>{state.status.RegStatsStatus} </span><br/>\n\n\n        </div>\n      );\n    }\n  }\n  \n\n\n\n  \n  \n  export default UpdatePanel;"]},"metadata":{},"sourceType":"module"}